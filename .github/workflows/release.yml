name: Simple Release

on:
  push:
    tags:
      - "v*"

env:
  GO_VERSION: "1.24.1"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get build info
        id: build_info
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          BUILD_TIME=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
          GIT_COMMIT=$(git rev-parse --short HEAD)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_time=$BUILD_TIME" >> $GITHUB_OUTPUT
          echo "git_commit=$GIT_COMMIT" >> $GITHUB_OUTPUT

      - name: Build all platforms
        run: |
          mkdir -p dist

          LDFLAGS="-s -w"
          LDFLAGS="$LDFLAGS -X 'github.com/junler/sysinfo/cmd.Version=${{ steps.build_info.outputs.version }}'"
          LDFLAGS="$LDFLAGS -X 'github.com/junler/sysinfo/cmd.BuildTime=${{ steps.build_info.outputs.build_time }}'"
          LDFLAGS="$LDFLAGS -X 'github.com/junler/sysinfo/cmd.GitCommit=${{ steps.build_info.outputs.git_commit }}'"

          # Build for all platforms
          platforms=(
            "linux/amd64"
            "linux/arm64"
            "darwin/amd64"
            "darwin/arm64"
            "windows/amd64"
          )

          for platform in "${platforms[@]}"; do
            GOOS=${platform%/*}
            GOARCH=${platform#*/}
            BINARY_NAME=sysinfo
            
            if [ "$GOOS" = "windows" ]; then
              BINARY_NAME="${BINARY_NAME}.exe"
            fi
            
            echo "Building for $GOOS/$GOARCH..."
            env GOOS=$GOOS GOARCH=$GOARCH go build -ldflags="$LDFLAGS" -o "dist/${BINARY_NAME}-${GOOS}-${GOARCH}" .
          done

      - name: Create archives
        run: |
          cd dist
          
          # Create tar.gz archives for Unix-like systems
          for file in sysinfo-linux-* sysinfo-darwin-*; do
            if [ -f "$file" ]; then
              BASENAME=$(basename "$file" | sed 's/sysinfo-//')
              tar -czf "sysinfo-${BASENAME}.tar.gz" "$file" ../README.md
            fi
          done
          
          # Create zip archives for Windows
          for file in sysinfo-windows-*; do
            if [ -f "$file" ]; then
              BASENAME=$(basename "$file" .exe | sed 's/sysinfo-//')
              zip "sysinfo-${BASENAME}.zip" "$file" ../README.md
            fi
          done
          
          # List created files for debugging
          ls -la *.tar.gz *.zip || echo "No archives found"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
            dist/*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
